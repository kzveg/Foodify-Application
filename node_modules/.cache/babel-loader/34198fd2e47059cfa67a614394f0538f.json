{"ast":null,"code":"var _jsxFileName = \"/Users/kostya/projects/react/HardWork/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/foodify_aplication/src/components/dishIItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dish() {\n  _s();\n\n  let image;\n  let ingridient = [];\n  const dispatch = useDispatch();\n  const dataDish = useSelector(state => state.dish.data);\n  console.log(dataDish);\n  useEffect(() => {\n    dispatch(getData());\n  }, [dispatch]); // if (dataDish) {\n  //     (dataDish.meals[0].strMealThumb !== undefined) ? image = dataDish.meals[0].strMealThumb :\n  //         image = 'https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/v1479829522/bxpgav8mvdsibvxctd1d.jpg'\n  //     let ing = [\n  //         dataDish.meals[0].strIngredient1,\n  //         dataDish.meals[0].strIngredient2,\n  //         dataDish.meals[0].strIngredient3,\n  //         dataDish.meals[0].strIngredient4,\n  //         dataDish.meals[0].strIngredient5,\n  //         dataDish.meals[0].strIngredient6,\n  //         dataDish.meals[0].strIngredient7,\n  //         dataDish.meals[0].strIngredient8,\n  //         dataDish.meals[0].strIngredient9,\n  //         dataDish.meals[0].strIngredient10,\n  //         dataDish.meals[0].strIngredient11,\n  //         dataDish.meals[0].strIngredient12,\n  //         dataDish.meals[0].strIngredient13,\n  //         dataDish.meals[0].strIngredient14,\n  //         dataDish.meals[0].strIngredient15,\n  //         dataDish.meals[0].strIngredient16,\n  //         dataDish.meals[0].strIngredient17,\n  //         dataDish.meals[0].strIngredient18,\n  //         dataDish.meals[0].strIngredient19,\n  //         dataDish.meals[0].strIngredient20\n  //     ]\n  //     // eslint-disable-next-line no-useless-concat\n  //     ingridient = ing.filter(el => (el.length > 1)).map(el => (el + ', '))\n  // }\n  // function ckip() {\n  //     dispatch(\n  //         getData()\n  //     )\n  // }\n  // function addDish() {\n  //     dispatch({\n  //         type: 'ADD_DISH',\n  //         payload: { data: dataDish }\n  //     })\n  // }\n\n  return dataDish !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dishItems\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 545\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"360\",\n        image: image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: [dataDish.meals[0].strArea, \" , \", dataDish.meals[0].strCategory]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [\"INGRIDIENTS:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), ingridient]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"INSTRUCTIONS:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), dataDish.meals[0].strInstructions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" ... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 15\n  }, this);\n}\n\n_s(Dish, \"x5HaVN2Y62HUvavV7uwp7VNrPKs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Dish;\nexport default Dish;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dish\");","map":{"version":3,"sources":["/Users/kostya/projects/react/HardWork/Новая папка/foodify_aplication/src/components/dishIItem.js"],"names":["React","useEffect","Card","CardActions","CardContent","CardMedia","Button","Typography","useDispatch","useSelector","getData","Dish","image","ingridient","dispatch","dataDish","state","dish","data","console","log","undefined","maxWidth","meals","strArea","strCategory","strInstructions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAIA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,MAAIC,KAAJ;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAArB,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACJ,OAAO,EAAR,CAAR;AACH,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT,CARY,CAYZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACKC,QAAQ,KAAKM,SAAd,gBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,MAAM,EAAC,KAFX;AAGI,QAAA,KAAK,EAAEV,KAHX;AAII,QAAA,GAAG,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,WAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,IAAjC;AAAsC,UAAA,SAAS,EAAC,KAAhD;AAAA,qBACKG,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAkBC,OADvB,SACmCT,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAkBE,WADrD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,KAAK,EAAC,gBAAlC;AAAA,kDAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGKZ,UAHL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eASI,QAAC,UAAD;AAAA,mDAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGKE,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAkBG,eAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,gBA6BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA9BV;AAiCH;;GAvFQf,I;UAIYH,W,EACAC,W;;;KALZE,I;AA6FT,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData } from '../redux/actions'\n\n\n\nfunction Dish() {\n\n    let image\n    let ingridient = []\n    const dispatch = useDispatch();\n    const dataDish = useSelector(state => state.dish.data)\n    console.log(dataDish);\n\n    useEffect(() => {\n        dispatch(getData())\n    }, [dispatch])\n\n    // if (dataDish) {\n    //     (dataDish.meals[0].strMealThumb !== undefined) ? image = dataDish.meals[0].strMealThumb :\n    //         image = 'https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/v1479829522/bxpgav8mvdsibvxctd1d.jpg'\n    //     let ing = [\n    //         dataDish.meals[0].strIngredient1,\n    //         dataDish.meals[0].strIngredient2,\n    //         dataDish.meals[0].strIngredient3,\n    //         dataDish.meals[0].strIngredient4,\n    //         dataDish.meals[0].strIngredient5,\n    //         dataDish.meals[0].strIngredient6,\n    //         dataDish.meals[0].strIngredient7,\n    //         dataDish.meals[0].strIngredient8,\n    //         dataDish.meals[0].strIngredient9,\n    //         dataDish.meals[0].strIngredient10,\n    //         dataDish.meals[0].strIngredient11,\n    //         dataDish.meals[0].strIngredient12,\n    //         dataDish.meals[0].strIngredient13,\n    //         dataDish.meals[0].strIngredient14,\n    //         dataDish.meals[0].strIngredient15,\n    //         dataDish.meals[0].strIngredient16,\n    //         dataDish.meals[0].strIngredient17,\n    //         dataDish.meals[0].strIngredient18,\n    //         dataDish.meals[0].strIngredient19,\n    //         dataDish.meals[0].strIngredient20\n    //     ]\n    //     // eslint-disable-next-line no-useless-concat\n    //     ingridient = ing.filter(el => (el.length > 1)).map(el => (el + ', '))\n    // }\n\n    // function ckip() {\n    //     dispatch(\n    //         getData()\n    //     )\n    // }\n\n    // function addDish() {\n    //     dispatch({\n    //         type: 'ADD_DISH',\n    //         payload: { data: dataDish }\n    //     })\n    // }\n\n    return (\n        (dataDish !== undefined) ?\n            <div className=\"dishItems\">\n                <Card sx={{ maxWidth: 545 }}>\n                    <CardMedia\n                        component=\"img\"\n                        height=\"360\"\n                        image={image}\n                        alt=\"\" />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                            {dataDish.meals[0].strArea} , {dataDish.meals[0].strCategory}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\" >\n                            INGRIDIENTS:\n                            <br />\n                            {ingridient}\n                        </Typography >\n                        <Typography>\n                            INSTRUCTIONS:\n                            <br />\n                            {dataDish.meals[0].strInstructions}\n                        </Typography>\n                    </CardContent >\n                    {/* <CardActions>\n                        <Button size=\"small\" onClick={ckip}>Skip</Button>\n                        <Button size=\"small\" onClick={() => addDish()}>Like </Button>\n                    </CardActions> */}\n                </Card >\n            </div >\n            : <div> ... </div>\n    )\n\n}\n\n\n\n\n\nexport default Dish;"]},"metadata":{},"sourceType":"module"}