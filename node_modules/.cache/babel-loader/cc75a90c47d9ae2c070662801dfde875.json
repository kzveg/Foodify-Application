{"ast":null,"code":"var _jsxFileName = \"/Users/kostya/Documents/kot/js/\\u0422\\u0417/HardWork/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/foodify_aplication/src/components/randomDish.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData } from '../redux/actions';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RandomDish() {\n  _s();\n\n  let image;\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.dish.data);\n  const receptsData = useSelector(state => state.dish.recepts);\n  const dataDish = data.meals;\n  const [activeTab, setactiveTab] = useState('');\n  useEffect(() => {\n    dispatch(getData());\n  }, [dispatch]);\n\n  if (dataDish !== undefined) {\n    dataDish[0].strMealThumb !== undefined ? image = dataDish[0].strMealThumb : image = 'https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/v1479829522/bxpgav8mvdsibvxctd1d.jpg';\n  }\n\n  const ckip = () => {\n    dispatch(getData());\n  };\n\n  const addDish = () => {\n    let tt = receptsData.filter(el => el[0].idMeal === dataDish[0].idMeal);\n\n    if (tt.length === 0) {\n      dispatch({\n        type: 'ADD_DISH',\n        payload: {\n          data: dataDish\n        }\n      }); // alert('this dish add to the favourites')\n    } else alert('sorry, but this dish is allready on the favourites list ');\n  };\n\n  return dataDish !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topBar\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: \"one\",\n          variant: \"outlined\",\n          children: \" Random dish \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"one\",\n          variant: \"outlined\",\n          onClick: () => setactiveTab('favourites'),\n          children: \" Favourites \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dishItems\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 545,\n          margin: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"360\",\n          image: image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: dataDish[0].strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: dataDish[0].strInstructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: ckip,\n            variant: \"outlined\",\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: addDish,\n            variant: \"outlined\",\n            color: \"error\",\n            children: \"Like \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" ... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 15\n  }, this);\n}\n\n_s(RandomDish, \"M7Q/J6T9CgyVbdsA/X1ITQ5qhgo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = RandomDish;\nexport default RandomDish;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomDish\");","map":{"version":3,"sources":["/Users/kostya/Documents/kot/js/ТЗ/HardWork/Новая папка/foodify_aplication/src/components/randomDish.js"],"names":["React","useEffect","useState","Card","CardActions","CardContent","CardMedia","Button","Typography","useDispatch","useSelector","getData","Stack","RandomDish","image","dispatch","data","state","dish","receptsData","recepts","dataDish","meals","activeTab","setactiveTab","undefined","strMealThumb","ckip","addDish","tt","filter","el","idMeal","length","type","payload","alert","maxWidth","margin","strMeal","strInstructions"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData } from '../redux/actions'\nimport Stack from '@mui/material/Stack';\n\n\n\n\nfunction RandomDish() {\n    let image\n    const dispatch = useDispatch();\n    const data = useSelector(state => state.dish.data)\n    const receptsData = useSelector(state => state.dish.recepts)\n    const dataDish = data.meals;\n    const [activeTab, setactiveTab] = useState('');\n\n\n    useEffect(() => {\n        dispatch(getData())\n    }, [dispatch])\n\n    if (dataDish !== undefined) {\n        (dataDish[0].strMealThumb !== undefined) ? image = dataDish[0].strMealThumb :\n            image = 'https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/v1479829522/bxpgav8mvdsibvxctd1d.jpg'\n    }\n\n    const ckip = () => {\n        dispatch(\n            getData()\n        )\n    }\n\n    const addDish = () => {\n        let tt = receptsData.filter(el => (el[0].idMeal === dataDish[0].idMeal))\n        if (tt.length === 0) {\n            dispatch({\n                type: 'ADD_DISH',\n                payload: { data: dataDish }\n            })\n            // alert('this dish add to the favourites')\n        }\n        else\n            alert('sorry, but this dish is allready on the favourites list ')\n    }\n\n    return (\n        (dataDish !== undefined) ?\n            <div>\n                <div className=\"topBar\">\n                    <Stack direction=\"row\" spacing={2}>\n                        <Button id='one' variant=\"outlined\"  > Random dish </Button>\n                        <Button id='one' variant=\"outlined\" onClick={() => setactiveTab('favourites')} > Favourites </Button>\n                    </Stack>\n                </div>\n                <div className=\"dishItems\">\n                    <Card sx={{\n                        maxWidth: 545,\n                        margin: 2\n                    }}>\n                        <CardMedia\n                            component=\"img\"\n                            height=\"360\"\n                            image={image}\n                            alt=\"\" />\n                        <CardContent >\n                            <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                {dataDish[0].strMeal}\n                            </Typography>\n                            <Typography>\n                                {dataDish[0].strInstructions}\n                            </Typography>\n                        </CardContent >\n                        <CardActions>\n                            <Button size=\"small\" onClick={ckip} variant=\"outlined\"  >Skip</Button>\n                            <Button size=\"small\" onClick={addDish} variant=\"outlined\" color=\"error\" >Like </Button>\n                        </CardActions>\n                    </Card >\n                </div >\n\n            </div>\n            : <div> ... </div>\n    )\n\n}\n\n\nexport default RandomDish;"]},"metadata":{},"sourceType":"module"}