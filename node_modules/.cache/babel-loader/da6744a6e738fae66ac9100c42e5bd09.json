{"ast":null,"code":"var _jsxFileName = \"/Users/kostya/projects/react/HardWork/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/foodify_aplication/src/components/dishIItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dish() {\n  _s();\n\n  let image;\n  let ingridient = [];\n  const dispatch = useDispatch();\n  const dataDish = useSelector(state => state.dish.data);\n  console.log(dataDish);\n  useEffect(() => {\n    dispatch(getData());\n  }, [dispatch]);\n\n  if (dataDish.length > 0) {\n    dataDish.meals[0].strMealThumb !== undefined ? image = dataDish.meals[0].strMealThumb : image = 'https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/v1479829522/bxpgav8mvdsibvxctd1d.jpg';\n    let ing = [dataDish.meals[0].strIngredient1, dataDish.meals[0].strIngredient2, dataDish.meals[0].strIngredient3, dataDish.meals[0].strIngredient4, dataDish.meals[0].strIngredient5, dataDish.meals[0].strIngredient6, dataDish.meals[0].strIngredient7, dataDish.meals[0].strIngredient8, dataDish.meals[0].strIngredient9, dataDish.meals[0].strIngredient10, dataDish.meals[0].strIngredient11, dataDish.meals[0].strIngredient12, dataDish.meals[0].strIngredient13, dataDish.meals[0].strIngredient14, dataDish.meals[0].strIngredient15, dataDish.meals[0].strIngredient16, dataDish.meals[0].strIngredient17, dataDish.meals[0].strIngredient18, dataDish.meals[0].strIngredient19, dataDish.meals[0].strIngredient20]; // eslint-disable-next-line no-useless-concat\n\n    ingridient = ing.filter(el => el.length > 1).map(el => el + ', ');\n  }\n\n  function ckip() {\n    dispatch(getData());\n  }\n\n  function addDish() {\n    dispatch({\n      type: 'ADD_DISH',\n      payload: {\n        data: dataDish\n      }\n    });\n  }\n\n  return dataDish.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dishItems\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 545\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"360\",\n        image: image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: [dataDish.meals[0].strArea, \" , \", dataDish.meals[0].strCategory]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [\"INGRIDIENTS:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), ingridient]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"INSTRUCTIONS:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), dataDish.meals[0].strInstructions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: ckip,\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: () => addDish(),\n          children: \"Like \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" ... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 15\n  }, this) // <div></div>\n  ;\n}\n\n_s(Dish, \"x5HaVN2Y62HUvavV7uwp7VNrPKs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Dish;\nexport default Dish;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dish\");","map":{"version":3,"sources":["/Users/kostya/projects/react/HardWork/Новая папка/foodify_aplication/src/components/dishIItem.js"],"names":["React","useEffect","Card","CardActions","CardContent","CardMedia","Button","Typography","useDispatch","useSelector","getData","Dish","image","ingridient","dispatch","dataDish","state","dish","data","console","log","length","meals","strMealThumb","undefined","ing","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient11","strIngredient12","strIngredient13","strIngredient14","strIngredient15","strIngredient16","strIngredient17","strIngredient18","strIngredient19","strIngredient20","filter","el","map","ckip","addDish","type","payload","maxWidth","strArea","strCategory","strInstructions"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData } from '../redux/actions'\n\n\n\nfunction Dish() {\n\n    let image\n    let ingridient = []\n    const dispatch = useDispatch();\n    const dataDish = useSelector(state => state.dish.data)\n    console.log(dataDish);\n\n    useEffect(() => {\n        dispatch(getData())\n    }, [dispatch])\n\n    if (dataDish.length > 0) {\n        (dataDish.meals[0].strMealThumb !== undefined) ? image = dataDish.meals[0].strMealThumb :\n            image = 'https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/v1479829522/bxpgav8mvdsibvxctd1d.jpg'\n        let ing = [\n            dataDish.meals[0].strIngredient1,\n            dataDish.meals[0].strIngredient2,\n            dataDish.meals[0].strIngredient3,\n            dataDish.meals[0].strIngredient4,\n            dataDish.meals[0].strIngredient5,\n            dataDish.meals[0].strIngredient6,\n            dataDish.meals[0].strIngredient7,\n            dataDish.meals[0].strIngredient8,\n            dataDish.meals[0].strIngredient9,\n            dataDish.meals[0].strIngredient10,\n            dataDish.meals[0].strIngredient11,\n            dataDish.meals[0].strIngredient12,\n            dataDish.meals[0].strIngredient13,\n            dataDish.meals[0].strIngredient14,\n            dataDish.meals[0].strIngredient15,\n            dataDish.meals[0].strIngredient16,\n            dataDish.meals[0].strIngredient17,\n            dataDish.meals[0].strIngredient18,\n            dataDish.meals[0].strIngredient19,\n            dataDish.meals[0].strIngredient20\n        ]\n        // eslint-disable-next-line no-useless-concat\n        ingridient = ing.filter(el => (el.length > 1)).map(el => (el + ', '))\n    }\n\n    function ckip() {\n        dispatch(\n            getData()\n        )\n    }\n\n    function addDish() {\n        dispatch({\n            type: 'ADD_DISH',\n            payload: { data: dataDish }\n        })\n    }\n\n    return (\n        (dataDish.length > 0) ?\n            <div className=\"dishItems\">\n                <Card sx={{ maxWidth: 545 }}>\n                    <CardMedia\n                        component=\"img\"\n                        height=\"360\"\n                        image={image}\n                        alt=\"\" />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                            {dataDish.meals[0].strArea} , {dataDish.meals[0].strCategory}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\" >\n                            INGRIDIENTS:\n                            <br />\n                            {ingridient}\n                        </Typography >\n                        <Typography>\n                            INSTRUCTIONS:\n                            <br />\n                            {dataDish.meals[0].strInstructions}\n                        </Typography>\n                    </CardContent >\n                    <CardActions>\n                        <Button size=\"small\" onClick={ckip}>Skip</Button>\n                        <Button size=\"small\" onClick={() => addDish()}>Like </Button>\n                    </CardActions>\n                </Card >\n            </div >\n            : <div> ... </div>\n        // <div></div>\n    )\n\n}\n\n\n\n\n\nexport default Dish;"]},"metadata":{},"sourceType":"module"}